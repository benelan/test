name: PR Bot
on:
  pull_request:
    # types: [opened]
    branches: [master]
jobs:
  assign:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const {
              assignees: currentAssignees,
              number: issue_number,
              user: { login: author },
              base: {
                repo: {
                  name: repo,
                  owner: { login: owner },
                },
              },
            } = context.payload.pull_request;

            const assignees =
              currentAssignees && currentAssignees.length
                ? [...currentAssignees.map((a) => a.login), author]
                : [author];

            github.rest.issues.addAssignees({
              owner,
              repo,
              issue_number,
              assignees
            });
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const {
              title,
              number: issue_number,
              labels: currentLabels,
              base: {
                repo: {
                  name: repo,
                  owner: { login: owner },
                },
              },
            } = context.payload.pull_request;

            const conventionalCommitRegex =
              /^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\([\w ,-]+\))?(!?:\s+)([\w ]+[\s\S]*)/i;

            if (!title) {
              console.log("No title found, ending run.");
              return;
            }

            const match = title.match(conventionalCommitRegex);
            if (match && match.length > 1) {
              // commit type is in the first match group
              const newLabel = getLabelName(match[1]);
              // make sure there aren't any duplicates
              const labels = currentLabels.map((l) => l.name).filter((l) => l !== newLabel);
              labels.push(newLabel);

              await github.rest.issues.setLabels({
                issue_number,
                owner,
                repo,
                labels,
              });

              function getLabelName(type) {
                switch (type) {
                  case "feat":
                    return "enhancement";
                  case "fix":
                    return "bug";
                  case "docs":
                    return "docs";
                  case "test":
                    return "testing";
                  case "refactor":
                    return "refactor";
                  case "tooling":
                    return "tooling";
                  default:
                    return "chore";
                }
              }
            }
