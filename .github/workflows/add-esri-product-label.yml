name: Add Esri Product Label
on:
  issues:
    types: [opened, edited]
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v4
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        with:
          script: |
            const { ISSUE_BODY } = process.env;
            const {
              issue: { number: issue_number, body },
              repo: { owner, repo },
            } = context;

            if (!body) {
              throw new Error("Could not determine the issue body");
            }

            const productRegex = new RegExp("(?<=### Esri team[\r\n].*[\r\n].*)^.*$", "m");
            const productRegexMatch = body.match(productRegex);

            if (!productRegexMatch || !productRegexMatch[0]) {
              throw new Error("Could not determine the Esri product");
            }

            const product = productRegexMatch[0].trim();

            if (product && product !== "N/A") {
              const { data: productLabelExists } = await github.issues.getLabel({
                issue_number,
                owner,
                repo,
                name: product,
              });

              if (!productLabelExists) {
                await github.issues.createLabel({
                  issue_number,
                  owner,
                  repo,
                  name: product,
                  color: "#006B75",
                  description: `Issues logged by ${product} team members.`,
                });
              }

              const { data: issueLabels } = await github.issues.listLabelsOnIssue({
                owner,
                repo,
                issue_number,
                per_page: 100,
              });

              // remove any existing product label
              const labels = issueLabels
                .filter((l) => !/Issues logged by/.test(l.description))
                .map((l) => l.name)
                .push(product);

              await github.issues.addLabels({
                issue_number,
                owner,
                repo,
                labels,
              });
            }
